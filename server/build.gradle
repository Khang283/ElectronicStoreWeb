/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'application'
    id "org.springframework.boot" version "3.2.4"
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.flywaydb.flyway" version "10.10.0"
//    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.2.4'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest:3.2.4'
    implementation 'org.springframework.boot:spring-boot-starter-security:3.2.4'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.2.4'
    implementation 'org.springframework.boot:spring-boot-starter-cache:3.2.4'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    implementation 'me.paulschwarz:spring-dotenv:4.0.0'
    implementation 'com.stripe:stripe-java:24.22.0'
    implementation 'org.apache.commons:commons-lang3:3.14.0'
    implementation 'io.github.cdimascio:dotenv-java:3.0.0'

    implementation 'org.springframework.data:spring-data-redis:3.2.4'
    implementation 'io.lettuce:lettuce-core:6.3.2.RELEASE'

    implementation 'org.flywaydb:flyway-mysql:'
    implementation 'org.springframework.boot:spring-boot-starter-webflux:3.2.4'
    implementation 'org.modelmapper:modelmapper:2.4.2'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.4.0'
    runtimeOnly libs.org.springframework.boot.spring.boot.devtools
    runtimeOnly libs.com.mysql.mysql.connector.j
    testImplementation libs.org.springframework.boot.spring.boot.starter.test

    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'
    testCompileOnly 'org.projectlombok:lombok:1.18.32'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'
}

group = 'electronicstore'
version = '0.0.1-SNAPSHOT'
description = 'electronicstore'
java.sourceCompatibility = JavaVersion.VERSION_17

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}
targetCompatibility = JavaVersion.VERSION_17

task setEnvVariable(type: Exec) {
//    doLast {
        def envFile = file('.env')
        if (envFile.exists()) {
            def command = ''
            envFile.eachLine { line ->
                {
                    if (!line.trim().startsWith('#') && line.contains('=')) {
                        def (key, value) = line.trim().split('=')
                        project.ext.set(key.trim(), value.trim())
//                        println System.setProperty(key.trim(), value.trim())
                        command = "export ${key.trim()}='${value.trim()}' "
                        commandLine 'bash', '-c', command
//                        exec {
//                            commandLine 'bash', '-c', command
//                        }
                    }
                }
            }
            commandLine 'bash', '-c', "env"
//            exec {
//                commandLine 'bash', '-c', "export TEST='test' "
//                commandLine 'bash', '-c', "env"
//            }
//        }
    }
}

build {
    dependsOn setEnvVariable
}

//task setEnvVars(type: Exec) {
//    commandLine 'bash', '-c', 'source .env && env | grep -v "^PATH=" | xargs -n 1 -I {} bash -c "export {}"'
//    // Adjust the command based on your shell (if not bash) and variable exclusion needs
//}

//build.dependsOn setEnvVars



